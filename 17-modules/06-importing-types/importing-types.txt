Importing Types
---------------
- TypeScript "import" and "export" syntax mirros that of the ES modules
    - With some relatively small differences namely
        - Importing and sharing Types between files
    
    - Types declared in TypeScript disappears
        - After it has been compiled into JavaScript
        - This is how it should happen / behave
    
    - There are edge cases that in doing so encounters a problem when importing Types
        - Particularly when using a transpiler e.g. Babel


- TypeScript version 3.8
    - Introduced a new piece of syntax to the import statement
        - NOTE: This is NOT valid JavaScript

    - Using the keyword "type"
        - Right after the "import" keyword of the import statement

        - The "import type" is ALWAYS guaranteed 
            - To be removed in the generated JavaScript code
            - Transpilers (e.g. Babel) can make better assumptions about the code

        - NOTE: It ONLY works to import Types 
            - NOT for named export that is of a class, function or variable


Syntax:

    import type { <export_type_name>, ... } from "<path/file>.js";

    import { type <export_type_name>, ... } from "<path/file>.js";