Adding Source Maps 
------------------
- Adding source maps will help in
    - Debugging the code
        - Setting breakpoints

    - Making sense on the content of the minified bundled code
        - Created / generated by Webpack (e.g. bundle.js)


- Source maps will take the minified bundle
    - Map it backwards to its pre-built state

    - To see where the actual code is coming from


- To add Source Maps
    - Open the file "tsconfig.json"
        - Enable option "sourceMap"
            - By default, it is set to "true"

        - Save the changes
        - Reference (https://webpack.js.org/guides/typescript/#root)
    
    - Open the file "webpack.config.js"
        - Add a new property "devtool"
            - Assign the value "inline-source-map"
            - NOTE: This property is positioned RIGHT AFTER the property "entry"

        - Instructs Webpack to
            - Extract the source maps
            - Include them in the final bundle

        - Save the changes

    - Rebundle and launch web application

        npm run build

        npm start


- Launch Chrome's Dev Tools
    - Click the tab "Sources"

    - On the right-hand side panel
        - The project name with a "cloud" icon is Created

        - Expanding shows the folders
            - node_modules
            - src
            - webpack

        - Inside the folder "src" shows
            - Individual TypeScript source files that are bundled together 
                - In generating the file "bundle.js"

            - A breakpoint can be set in any of the source files
                - For debugging purposes

        